apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ${ENVIRONMENT}
spec:
  replicas: 1
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 100%
  template:
    metadata:
      labels:
        app: ${ENVIRONMENT}
    spec:
      containers:
        - name: ${ENVIRONMENT}
          image: ${CI_REGISTRY_IMAGE}:${BUILD_NUMBER}
          resources:
            limits:
              memory: 600Mi
              cpu: 500m
            requests:
              memory: 350Mi
              cpu: 250m
          ports:
            - containerPort: 3000
          livenessProbe:
            httpGet:
              path: /healthz
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 30
            timeoutSeconds: 5
          env:
            - name: PORT
              value: "3000"
            - name: NODE_ENV
              value: production
            - name: COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: api-production
                  key: cookie-secret
            - name: DATABASE_HOST
              valueFrom:
                secretKeyRef:
                  name: database-production
                  key: postgres-host
            - name: DATABASE_NAME
              valueFrom:
                secretKeyRef:
                  name: database-production
                  key: postgres-name
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-production
                  key: postgres-password
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: database-production
                  key: postgres-user
      imagePullSecrets:
        - name: gitlab

---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: ${ENVIRONMENT}
  name: ${ENVIRONMENT}
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: ${ENVIRONMENT}
  type: ClusterIP
